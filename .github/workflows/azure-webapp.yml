name: Deploy Web (Next.js) to Azure App Service
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@10

      - name: Corepack sanity
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate
          pnpm -v

      - name: Install (workspace root)
        run: pnpm install --frozen-lockfile

      # Build web (uses your SQL Server URL at build time; add this secret in repo settings)
      - name: Build (apps/web)
        working-directory: apps/web
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: pnpm build

      # Assert standalone output exists (root OR monorepo path)
      - name: Assert standalone server path
        working-directory: apps/web
        run: |
          set -e
          if [ -f .next/standalone/server.js ]; then
            echo "SERVER_PATH=server.js" >> $GITHUB_ENV
            echo "Detected: .next/standalone/server.js"
          elif [ -f .next/standalone/apps/web/server.js ]; then
            echo "SERVER_PATH=apps/web/server.js" >> $GITHUB_ENV
            echo "Detected: .next/standalone/apps/web/server.js"
          else
            echo "ERROR: standalone server.js not found in either expected location."
            ls -R .next || true
            exit 1
          fi

      # Prepare deploy folder (standalone)
      - name: Prepare deploy folder
        working-directory: apps/web
        run: |
          set -e
          rm -rf ../site && mkdir -p ../site
          # copy the traced standalone tree
          cp -r .next/standalone/* ../site/
          # static assets
          mkdir -p ../site/.next/static
          cp -r .next/static ../site/.next/static
          # public assets
          cp -r public ../site/public
          # write a hint with the resolved server path (for troubleshooting)
          echo "$SERVER_PATH" > ../site/SERVER_PATH.txt
          echo "Resolved SERVER_PATH=$SERVER_PATH"

      - name: Zip artifact
        working-directory: apps
        run: |
          cd site
          zip -r ../app.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: apps/app.zip
