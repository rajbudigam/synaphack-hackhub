name: Deploy Web (Next.js) to Azure App Service
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@10

      - name: Enable Corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate
          pnpm -v

      # Install once at ROOT (workspace-aware)
      - name: Install deps (workspace root)
        run: pnpm install --frozen-lockfile

      # Generate Prisma client (doesn't connect to DB)
      - name: Prisma generate (apps/web)
        working-directory: apps/web
        env:
          # SQL Server provider in schema – we supply the Azure SQL URL via secrets for safety
          DATABASE_URL: ${{ secrets.AZURE_DATABASE_URL }}
        run: pnpm prisma generate

      # Build Next.js in apps/web with standalone output
      - name: Show next.config.mjs (debug)
        working-directory: apps/web
        run: cat next.config.mjs

      - name: Build (apps/web)
        working-directory: apps/web
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.AZURE_DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        run: pnpm build

      # ✅ The check MUST run in apps/web
      - name: Verify standalone output exists
        working-directory: apps/web
        run: |
          test -f .next/standalone/server.js || (echo "ERROR: .next/standalone/server.js not found. Ensure apps/web/next.config.mjs has output:'standalone' and that the build ran in apps/web." && exit 1)

      # Prepare deployment bundle: standalone server + static + public
      - name: Prepare deploy folder
        working-directory: apps/web
        run: |
          rm -rf ../site && mkdir -p ../site
          # copy minimal server bundle
          cp -r .next/standalone/* ../site/
          # static assets
          mkdir -p ../site/.next/static
          cp -r .next/static ../site/.next/static
          # public assets
          cp -r public ../site/public
          # optional: startup shim (App Service can just run server.js)
          echo "node server.js" > ../site/startup.sh
          chmod +x ../site/startup.sh
          ls -la ../site | sed -e 's/^/SITE: /'

      - name: Zip artifact
        working-directory: apps
        run: |
          cd site
          zip -r ../app.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: apps/app.zip