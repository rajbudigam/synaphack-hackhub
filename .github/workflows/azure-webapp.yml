name: Deploy Web (Next.js) to Azure App Service
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      # Use your Azure SQL URL secret (must start with sqlserver://)
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@10

      - name: Enable Corepack (sanity)
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate
          pnpm -v

      # Workspace install at repo root
      - name: Install dependencies (workspace root)
        run: pnpm install --frozen-lockfile

      # If you have pnpm-allow-scripts.json committed, this approves prisma scripts
      - name: Approve build scripts (optional)
        run: pnpm approve-builds || true

      # ---- Prisma generate BEFORE build (uses sqlserver URL from env) ----
      - name: Prisma generate (apps/web)
        working-directory: apps/web
        run: pnpm prisma generate

      # ---- Build Next (uses Clerk + DATABASE_URL only for type/scheme; /events is runtime-rendered) ----
      - name: Build (apps/web)
        working-directory: apps/web
        run: pnpm build

      # Ensure standalone output exists
      - name: Verify standalone output
        working-directory: apps/web
        run: |
          test -f .next/standalone/server.js || (echo "ERROR: .next/standalone/server.js not found. Ensure next.config.mjs has output: 'standalone'." && exit 1)

      # Package standalone bundle + static assets + public
      - name: Prepare deploy folder (standalone)
        working-directory: apps/web
        run: |
          rm -rf ../site && mkdir -p ../site
          cp -r .next/standalone/* ../site/
          mkdir -p ../site/.next/static
          cp -r .next/static ../site/.next/static
          cp -r public ../site/public

      - name: Zip artifact
        working-directory: apps
        run: |
          cd site
          zip -r ../app.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: apps/app.zip
