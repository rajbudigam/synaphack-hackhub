name: Deploy Web (Next.js) to Azure App Service
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm@10

      - name: Corepack sanity
        run: |
          corepack enable
          corepack prepare pnpm@10 --activate
          pnpm -v

      # Install once at ROOT (workspace-aware)
      - name: Install (workspace root)
        run: pnpm install --frozen-lockfile

      # Generate Prisma client (needs DATABASE_URL even for sqlite)
      - name: Prisma generate (web)
        working-directory: apps/web
        env:
          DATABASE_URL: file:./prisma/dev.db
        run: pnpm prisma generate

      # Create the sqlite DB and seed it for demo
      - name: Prisma db push & seed (sqlite demo)
        working-directory: apps/web
        env:
          DATABASE_URL: file:./prisma/dev.db
        run: |
          pnpm prisma db push
          pnpm prisma db seed
          ls -lh prisma/dev.db

      # Build Next.js (needs Clerk + DATABASE_URL in env)
      - name: Build (web)
        working-directory: apps/web
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          DATABASE_URL: file:./prisma/dev.db
        run: pnpm build

      # Package Next.js standalone + the sqlite DB
      - name: Prepare deploy folder (standalone)
        working-directory: apps/web
        run: |
          rm -rf ../site && mkdir -p ../site
          cp -r .next/standalone/* ../site/
          mkdir -p ../site/.next/static
          cp -r .next/static ../site/.next/static
          cp -r public ../site/public
          # ship the prisma folder (contains dev.db)
          mkdir -p ../site/prisma
          cp -r prisma/dev.db ../site/prisma/dev.db

      - name: Zip artifact
        working-directory: apps
        run: |
          cd site
          zip -r ../app.zip .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: apps/app.zip